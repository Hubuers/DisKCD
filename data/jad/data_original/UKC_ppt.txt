'MVC简介':JDBC与DAO这一节我们将通过一个实例将JDBC与DAO联系在一起。使用worker表的结构如表所示。 聚慕课教育研发中心学习、授课与教学PPT课件MVC设计模式MVC简介 主要流行框架简介 聚慕课教育研发中心学习、授课与教学PPT课件MVC模式MVC是Xerox PARC在二十世纪八十年代为编程语言Smalltalk－80发明的一种软件设计模式，已被广泛使用。后来被推荐为Oracle旗下Sun公司Java EE平台的设计模式，并且受到越来越多的使用ColdFusion和PHP的开发者的欢迎。模型－视图－控制器模式是一个有用的工具箱，它有很多好处，但也有一些缺点。 聚慕课教育研发中心学习、授课与教学PPT课件主要流行框架简介成熟框架介绍 正在兴起的框架 聚慕课教育研发中心学习、授课与教学PPT课件成熟框架介绍1. Hibernate 框架 Hibernate 是一种ORM框架，全称为 Object-Relative Database-Mapping，在Java对象与关系型数据库之间建立某种映射，以实现直接存取Java对象（POJO）。 2. Struts2框架 Struts2以WebWork优秀的设计思想为核心，吸收了 Struts框架的部分优点，提供了一个更加整洁的MVC设计模式实现的Web 应用程序框架 。 3. Struts 框架（目前已淘汰） Struts框架是一个完美的MVC实现，它有一个中央控制类(一个Servlet)，针对不同的业务，我们需要一个Action类负责页面跳转和后台逻辑运算，一个或几个JSP页面负责数据的输入和输出显示，还有一个Form类负责传递Action和JSP中间的数据。 4. MyBatis 框架 MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。2013年11月迁移到Github。 5. Spring 框架 调用者依赖被调用者，它们之间形成了强耦合，如果我想在其他地方复用某个类，则这个类依赖的其他类也需要包含。程序就变得很混乱，每个类互相依赖互相调用，复用度极低。 6. Spring MVC 框架 Spring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。 7. ZF框架 Zend Framework(简写ZF)是由 Zend 公司支持开发的完全基于 PHP5 的开源PHP开发框架，可用于开发 Web 程序和服务，ZF采用 MVC(Model–View-Controller) 架构模式来分离应用程序中不同的部分方便程序的开发和维护。 8. .NET框架 .NET MVC 是微软官方提供的以MVC模式为基础的.NET Web应用程序(Web Application)框架,它由Castle的MonoRail而来(Castle的MonoRail是由java而来)。 聚慕课教育研发中心学习、授课与教学PPT课件
'Servlet与表单':本课时学习重点Servlet简介 请求头和响应头 Cookie Session 聚慕课教育研发中心学习、授课与教学PPT课件Servlet简介Servlet（Server Applet）是Java Servlet的简称，称为小服务程序或服务连接器，是指用Java语言编写的服务器端程序，主要功能在于交互式地浏览和修改数据（即用于接收和响应客户端的http请求），生成动态Web内容。 狭义的Servlet是指Java语言实现的一个接口，广义的Servlet是指任何实现了这个Servlet接口的类.聚慕课教育研发中心学习、授课与教学PPT课件Servlet简介主要任务 1.读取客户端（浏览器）发送的显式的数据。 2.读取客户端（浏览器）发送的隐式的 HTTP 请求数据。 3.处理数据并生成结果。 4.发送显式的数据（即文档）到客户端（浏览器）。 5.发送隐式的 HTTP 响应到客户端（浏览器）。 聚慕课教育研发中心学习、授课与教学PPT课件
'List接口':List与SetList集合中可以包含重复的对象 实现类：ArrayList、LinkedList、Vector Set集合中不包含重复的对象 实现类：HashSet、TreeSet、EnumSet、LinkedHashSet、AbstractSet 2.List集合List集合接口常用方法(1)void add(int, Object)方法：用来将Object对象的引用插入到集合指定的索引位置，int参数的值就是元素插入的索引位置。例如，当int参数值为3时，元素就会插入到第4个位置，原来第4个位置及以后的元素都向后移一位。如果add方法中没有int参数，那就是将Object对象顺序地插入到集合的尾部。 Object get(int)方法：用于获取指定索引位置的对象。如果此位置没有元素，则返回值为null。如果int的值超过List列表的大小，那么就会抛出一个IndexOutOfBoundsException异常。 Object remove(int)方法：用来删除集合中指定索引位置的元素。remove()方法的返回值则是这个被删除的元素。当指定位置的元素删除以后，后续位置的元素都依次向前移动一位。 List集合接口常用方法(2)Object set(int, Object)方法：用指定元素替换集合中指定位置的元素，返回值是指定位置的原元素。 int indexOf(Object)与int lastIndexOf(Object)方法：此方法分别用于返回Object对象第一次与最后一次在集合中出现的索引位置。如果集合中不包含此元素，则返回-1。 Iterator iterator()方法：返回对List列表元素进行迭代的迭代器。 int size()方法：返回集合元素的个数。ArrayListArrayList类实现了List接口，所以List接口中定义的所有方法它都实现了。实际上，ArrayList类实现了一种可变的数组，可以根据索引位置对集合进行快速的随机访问。但是其缺点是，在指定的索引位置插入对象或删除对象速度较慢LinkedListLinkedList类是一种采用链式存储结构保存元素的List列表类。这种结构的优点是，向集合中插入元素、删除元素速度较快。但是其缺点是，对集合元素进行随机访问的速度较慢Collection.toArray()的问题使用无参数的toArray()有一个缺点，就是转换后的数组类型是Object[]。 虽然Object数组也不是不能用，但是当想用一个具体类型的数组，比如String[]时，问题就来了。把Object[]转换成String[]比较麻烦。
'字符串操作':Java应用开发第6章 字符串创建字符串char a[]={‘g’,’o’,’o’,’d’} String s=new String(a)=>String s=new String(“good”) char a[]={‘s’,’t’,’u’,’d’,’e’,’n’,’t’} String s=new String(a,2,4)=>String s=new String(“uden”)字符串操作——字符串连接字符串连接：使用“+”号，可连接字符串与其它任何类型连接，其它类型数据会自动转换为字符串类型 Java中的字符串不能分开在两行中写，如果字符串太长，可用“+”号将两行字符串连接起来 程序示例：P109 例6.5 字符串操作——获取字符串信息获取字符串长度：str.length(); 程序示例P110 例6.6获取指定字符的索引位置： str.indexOf(substr) str.lastindexOf(substr) 程序示例：P110 例6.7, P111 例6.8如果lastIndexOf()方法中的参数是空字符串””，则返回的结果与调用该字符串的length()方法的返回结果相同获取自动索引位置的字符：str.charAt(int index) 程序示例：P112 例6.9字符串操作——去除字符串中的空格去除字符串的前导、尾部空格：str.trim() 程序示例：P112 例6.10去除字符串中的所有空格：StringTokenizer()与replaceAll() str.replaceAll(String regex, String replacement) 程序示例：P113 例6.12 字符串操作——字符串替换replace()：替换全部 replaceFirst()：替换第一个 程序示例：P114 例6.13， P114 例6.14 replaceAll()与replace()的区别： http://blog.csdn.net/coolwzjcool/article/details/6658978字符串操作——判断字符串判断字符串是否相等： equals() equalsIgnoreCase() 程序示例：P115 例6.15 比较运算符“==”比较的是内存位置，不适宜拿来比较字符串内容。比较字符串需使用equals()与equalsIgnoreCase()方法判断字符串的开始与结尾：str.startsWith(String prefix);str.endsWith(String suffix); 程序示例：P117 例6.16 字符串操作——字母大小写转换str.toLowerCase()：字符串全部转换为小写 str.toUpperCase()：字符串全部转换为大写 使用toLowerCase()与toUpperCase()方法进行大小写转换时，数字或非字母字符不受影响 程序示例：P118 例6.17
